
//Leetcode  â€”> 905. Sort Array By Parity(Easy)


///Method 1:
// class Solution {
//     public int[] sortArrayByParity(int[] nums) {
//         int[] res = new int[nums.length];
//         int index=0;
//         for(int i=0;i<nums.length;i++){
//             if(nums[i] % 2 == 0){
//                 res[index]=nums[i];
//                 nums[i] = -1;
//                 index++;
//             }
           
//         }
         
//         for(int i=0;i<nums.length;i++){
//             if(nums[i] >= 0){
//                 res[index]=nums[i];
//                 nums[i] = -1;
//                 index++;
//             }
            
//         }
        
//         return res;
        
//         }
// }

//Method 2
class Solution {
public int[] sortArrayByParity(int[] A) {
        int i = 0;
        int j = A.length - 1;
        while (i < j) {
            if(A[i] % 2 == 0) {
                // Even first
                i++;
            }
            else {
                if(A[j] % 2 != 0) {
                    // Both odd
                    j--;
                }
                if (A[j] % 2 == 0) {
                    // Odd, Even
                    swap(A, i, j);
                    i++;
                    j--;
                }
            }
        }


        return A;
    }

    private void swap(int[] nums, int i, int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
}