//Leetcode  â€”>39. Combination Sum(Medium)

class Solution {
 
    private void helper(List<List<Integer>> res,
                        int index,int[] arr,int target,List<Integer> ds){
        
        if(arr.length == 0){
            return;
        }
        
        if(index == arr.length){
            if(target == 0){
            res.add(new ArrayList<>(ds));            
            }
            return;
    }
        if(arr[index]<=target){
        ds.add(arr[index]);
        helper(res,index,arr,target-arr[index],ds);
        ds.remove(ds.size()-1);
        }
        helper(res,index+1,arr,target,ds);
    }
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        
        List<List<Integer>> res = new ArrayList<>();
        helper(res,0,candidates,target,new ArrayList<>());
        return res;
    }
}


